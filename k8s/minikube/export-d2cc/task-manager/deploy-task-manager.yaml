kind: ConfigMap
apiVersion: v1
metadata:
  name: cse-export-d2cc-task-manager-configmap
  labels:
    app: gridcapa-task-manager
    component: gridcapa-task-manager
    region: cse
    process: export-d2cc
data:
  application.yml: |-
    spring:
      datasource:
        url: jdbc:postgresql://${POSTGRES_HOST}:5432/${POSTGRES_DB}
        driverClassName: org.postgresql.Driver
        username: ${POSTGRES_USER}
        password: ${POSTGRES_PASSWORD}
      jpa:
        hibernate:
          ddl-auto: update
      rabbitmq:
        host: gridcapa-rabbitmq
        port: 5672
        username: ${RABBITMQ_USER}
        password: ${RABBITMQ_PASSWORD}
      cloud:
        stream:
          default:
            group: cse-export-d2cc-task-manager
          bindings:
            consumeMinioEvent-in-0:
              destination: gridcapa.minio.events
            consumeTaskStatusUpdate-in-0:
              destination: cse-export-d2cc-task-status-updated
            consumeTaskEventUpdate-in-0:
              destination: cse-export-d2cc-task-manager-logs-exchange
            task-updated:
              destination: cse-export-d2cc-task-updated
            task-status-updated:
              destination: cse-export-d2cc-task-updated
          rabbit:
            default:
              consumer:
                auto-bind-dlq: true
                max-attempts: 1
            bindings:
              consumeMinioEvent-in-0:
                consumer:
                  exchange-type: fanout
              task-status-updated:
                producer:
                  routing-key-expression: '''status'''

    task-server:
      process:
        tag: CSE_EXPORT_D2CC
        timezone: CET
        inputs:
          - CGM
          - CRAC
        optional-inputs:
        outputs:
          - TTC_RAO
          - FINAL_CGM
      whitelist:
        - http://gridcapa-minio:9000/

    minio-adapter:
      bucket: gridcapa
      base-path:
      url: http://gridcapa-minio:9000/
      access-key: ${MINIO_ACCESS_KEY}
      secret-key: ${MINIO_SECRET_KEY}
      
    ftp:
      ftp-host: ${FTP_SOURCE_IP}
      ftp-port: ${FTP_SOURCE_PORT}
      ftp-user: gridcapa
      ftp-password: gridcapa

    stomp:
      allowed-origin: https://gridcapa-dev.farao-local-community.com,http://gridcapa-dev.farao-local-community.com
      starting-ws-endpoint: /tasks/notify
      notify: /task
      receive-request: /app
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: cse-export-d2cc-task-manager
  labels:
    app: gridcapa-task-manager
    component: gridcapa-task-manager
    region: cse
    process: export-d2cc
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gridcapa-task-manager
      component: gridcapa-task-manager
      region: cse
      process: export-d2cc
  template:
    metadata:
      labels:
        app: gridcapa-task-manager
        component: gridcapa-task-manager
        region: cse
        process: export-d2cc
    spec:
      containers:
        - name: cse-export-d2cc-task-manager
          image: docker.io/farao/gridcapa-task-manager
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          env:
            - name: POSTGRES_HOST
              valueFrom:
                configMapKeyRef:
                  name: env-configmap
                  key: GRIDCAPA_POSTGRES_HOST
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  name: env-configmap
                  key: GRIDCAPA_POSTGRES_CSE_EXPORT_D2CC_DB
            - name: FTP_SOURCE_IP
              valueFrom:
                configMapKeyRef:
                  name: env-configmap
                  key: GRIDCAPA_SOURCE_HOST_CSE_EXPORT_D2CC
            - name: FTP_SOURCE_PORT
              valueFrom:
                configMapKeyRef:
                  name: env-configmap
                  key: GRIDCAPA_SOURCE_PORT_CSE_EXPORT_D2CC               
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: gridcapa-postgresql-credentials
                  key: cse-export-d2cc-user
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: gridcapa-postgresql-credentials
                  key: cse-export-d2cc-password
            - name: MINIO_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: gridcapa-minio-credentials
                  key: minio-access-key
            - name: MINIO_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: gridcapa-minio-credentials
                  key: minio-secret-key
            - name: RABBITMQ_USER
              valueFrom:
                secretKeyRef:
                  name: gridcapa-rabbitmq-credentials
                  key: rabbitmq-user
            - name: RABBITMQ_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: gridcapa-rabbitmq-credentials
                  key: rabbitmq-password
          volumeMounts:
            - mountPath: /config/application.yml
              subPath: application.yml
              name: cse-export-d2cc-task-manager-configmap-volume
          livenessProbe:
            tcpSocket:
              port: 8080
            initialDelaySeconds: 25
            periodSeconds: 15
            timeoutSeconds: 2
            failureThreshold: 3
            successThreshold: 1
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 35
            timeoutSeconds: 2
            periodSeconds: 15
            failureThreshold: 3
            successThreshold: 1
          resources:
            requests:
              cpu: "0.5"
              memory: "384Mi"
            limits:
              cpu: "2.0"
              memory: "1Gi"
      initContainers:
        - name: minio-notifications
          image: docker.io/minio/mc
          env:
            - name: MINIO_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: gridcapa-minio-credentials
                  key: minio-access-key
            - name: MINIO_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: gridcapa-minio-credentials
                  key: minio-secret-key
            - name: MINIO_BUCKET
              valueFrom:
                configMapKeyRef:
                  name: env-configmap
                  key: GRIDCAPA_MINIO_BUCKET_CSE_EXPORT_D2CC
          command: ['/bin/sh', "-c","mc alias set gridcapa http://gridcapa-minio:9000 $(MINIO_ACCESS_KEY) $(MINIO_SECRET_KEY) && (mc event add gridcapa/$(MINIO_BUCKET) arn:minio:sqs::_:amqp --event put,delete || true)"]
      restartPolicy: Always
      volumes:
        - name: cse-export-d2cc-task-manager-configmap-volume
          configMap:
            name: cse-export-d2cc-task-manager-configmap

---
apiVersion: v1
kind: Service
metadata:
  name: cse-export-d2cc-task-manager
  labels:
    app: gridcapa-task-manager
    component: gridcapa-task-manager
    region: cse
    process: export-d2cc
spec:
  type: ClusterIP
  selector:
    app: gridcapa-task-manager
    component: gridcapa-task-manager
    region: cse
    process: export-d2cc
  ports:
    - port: 80
      targetPort: 8080
      name: http


