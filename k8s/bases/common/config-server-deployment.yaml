apiVersion: apps/v1
kind: Deployment
metadata:
  name: config-server
  labels:
    app: gridcapa
    component: config-server
spec:
  selector:
    matchLabels:
      app: gridcapa
      component: config-server
  template:
    metadata:
      labels:
        app: gridcapa
        component: config-server
    spec:
      containers:
        - name: config-server
          image: gridsuite-config-server
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 80
          env:
            - name: POSTGRES_HOST
              valueFrom:
                configMapKeyRef:
                  name: env-configmap
                  key: GRIDCAPA_POSTGRES_HOST
            - name: POSTGRES_PORT
              valueFrom:
                configMapKeyRef:
                  name: env-configmap
                  key: GRIDCAPA_POSTGRES_PORT
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  name: env-configmap
                  key: GRIDCAPA_POSTGRES_CONFIG_DB
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: gridcapa-postgresql-credentials
                  key: config-user
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: gridcapa-postgresql-credentials
                  key: config-password
            - name: GRIDCAPA_RABBITMQ_USER
              valueFrom:
                secretKeyRef:
                  name: gridcapa-rabbitmq-credentials
                  key: rabbitmq-user
            - name: GRIDCAPA_RABBITMQ_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: gridcapa-rabbitmq-credentials
                  key: rabbitmq-password
          volumeMounts:
            - mountPath: /config
              name: config-server-configmap-volume
            - mountPath: /tmp
              name: tmp-emptydir
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            runAsUser: 1000
            readOnlyRootFilesystem: true
          resources:
            requests:
              cpu: "0.1"
              memory: "384Mi"
            limits:
              cpu: "0.5"
              memory: "1Gi"
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 240
            periodSeconds: 20
            timeoutSeconds: 2
            failureThreshold: 1
            successThreshold: 1
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 60
            periodSeconds: 20
            timeoutSeconds: 2
            failureThreshold: 1
            successThreshold: 1
          args: ["--spring.config.additional-location=/config/"]
      restartPolicy: Always
      volumes:
        - name: config-server-configmap-volume
          configMap:
            name: config-server-configmap
        - name: tmp-emptydir
          emptyDir: {}
