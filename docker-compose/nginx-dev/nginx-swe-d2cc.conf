events {
    worker_connections 1024;
}

http {
    # Common section
    upstream minio-upstream {
        server minio:9001;
    }
    upstream rabbitmq-upstream {
        server rabbitmq:15672;
    }
    upstream filebrowser-upstream {
        server filebrowser;
    }
    upstream config-server-upstream {
        server config-server:8080;
    }
    upstream config-notification-server-upstream {
        server config-notification-server:8080;
    }
    upstream front-end-local-dev {
#          server 10.132.219.109:3000; # 10.135.89.133:3000;
       server 10.135.89.106:3000;
#        server 172.20.0.12:3000;
    }

    # SWE D2CC (CCC DA) section
    upstream swe-d2cc-upstream {
        server swe-d2cc-app;
    }
    upstream swe-d2cc-task-manager-server-upstream {
        server swe-d2cc-task-manager:8080;
    }
    upstream swe-d2cc-job-launcher-server-upstream {
        server swe-d2cc-job-launcher:8080;
    }

    server {
        listen 80;
        server_name filebrowser;
        client_max_body_size 50M;

        add_header 'Access-Control-Allow-Origin' $http_origin;
        add_header 'Access-Control-Allow-Credentials' 'true';
        add_header 'Access-Control-Allow-Headers' 'Authorization,Accept,Origin,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
        add_header 'Access-Control-Allow-Methods' 'GET,POST,OPTIONS,PUT,DELETE,PATCH';
        if ($request_method = 'OPTIONS') {
            return 204;
        }

        # Common section
        location /utils/filebrowser/ {
            proxy_pass http://filebrowser-upstream/;
        }
        location /utils/rabbitmq/ {
            if ($request_uri ~* "/utils/rabbitmq/(.*)") {
                proxy_pass http://rabbitmq-upstream/$1;
            }
        }
        location /apps-metadata.json {
            include mime.types;
            index apps-metadata.json;
            alias /usr/share/nginx/html/;
        }
        location /minio {
            proxy_pass http://minio-upstream;
            # To support websocket
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            rewrite "(?i)/minio(/|$)(.*)" /$2 break;
        }

        # SWE D2CC (CCC DA) section
        location /swe/d2cc/config/ {
            proxy_pass http://config-server-upstream/;
            proxy_set_header userId "johnDoe";
        }
        location /swe/d2cc/config-notification/ {
            proxy_pass http://config-notification-server-upstream/;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header userId "johnDoe";
        }
        location /swe/d2cc/ {
            proxy_pass http://swe-d2cc-upstream/;
        }
        location /swe/d2cc/task-notification/ {
            proxy_pass http://swe-d2cc-task-manager-server-upstream/;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $host;
        }
        location /swe/d2cc/task-manager/ {
             proxy_pass http://swe-d2cc-task-manager-server-upstream/;
        }
        location /swe/d2cc/gridcapa-job-launcher/ {
             proxy_pass http://swe-d2cc-job-launcher-server-upstream/;
        }
    }
}
